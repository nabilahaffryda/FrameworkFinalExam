{"ast":null,"code":"import { myFirebase } from \"../firebase/config\";\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nconst requestLogin = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\n\nconst receiveLogin = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n};\n\nconst loginError = () => {\n  return {\n    type: LOGIN_FAILURE\n  };\n};\n\nconst requestLogout = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\n\nconst receiveLogout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\nconst logoutError = () => {\n  return {\n    type: LOGOUT_FAILURE\n  };\n};\n\nconst verifyRequest = () => {\n  return {\n    type: VERIFY_REQUEST\n  };\n};\n\nconst verifySuccess = () => {\n  return {\n    type: VERIFY_SUCCESS\n  };\n};\n\nexport const loginUser = (email, password) => dispatch => {\n  dispatch(requestLogin());\n  myFirebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n    dispatch(receiveLogin(user));\n  }).catch(error => {\n    // Do something with the error if you want! \n    dispatch(loginError());\n  });\n};\nexport const logoutUser = () => dispatch => {\n  dispatch(requestLogout());\n  myFirebase.auth().signOut().then(() => dispatch(receiveLogout())).catch(error => {\n    // Do something with the error if you want! \n    dispatch(logoutError());\n  });\n};\nexport const verifyAuth = () => dispatch => {\n  dispatch(verifyRequest());\n  myFirebase.auth().onAuthStateChanged(user => {\n    if (user !== null) {\n      dispatch(receiveLogin(user));\n    }\n\n    dispatch(verifySuccess());\n  });\n};","map":{"version":3,"sources":["D:/FrameworkUAS/frontend/src/actions/loginUser.js"],"names":["myFirebase","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","requestLogin","type","receiveLogin","user","loginError","requestLogout","receiveLogout","logoutError","verifyRequest","verifySuccess","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged"],"mappings":"AAAA,SAASA,UAAT,QAA2B,oBAA3B;AACA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;;AAEP,MAAMC,YAAY,GAAG,MAAM;AACvB,SAAO;AACHC,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMU,YAAY,GAAGC,IAAI,IAAI;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER,aADH;AAEHU,IAAAA;AAFG,GAAP;AAIH,CALD;;AAMA,MAAMC,UAAU,GAAG,MAAM;AACrB,SAAO;AACHH,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO;AACHJ,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO;AACHL,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJD;;AAIG,MAAMW,WAAW,GAAG,MAAM;AACzB,SAAO;AACHN,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJE;;AAKH,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO;AACHP,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMW,aAAa,GAAG,MAAM;AACxB,SAAO;AACHR,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJD;;AAKA,OAAO,MAAMW,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBC,QAAQ,IAAI;AACtDA,EAAAA,QAAQ,CAACb,YAAY,EAAb,CAAR;AACAT,EAAAA,UAAU,CACLuB,IADL,GAEKC,0BAFL,CAEgCJ,KAFhC,EAEuCC,QAFvC,EAGKI,IAHL,CAGUb,IAAI,IAAI;AACVU,IAAAA,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAR;AACH,GALL,EAMKc,KANL,CAMWC,KAAK,IAAI;AACZ;AACAL,IAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACH,GATL;AAUH,CAZM;AAaP,OAAO,MAAMe,UAAU,GAAG,MAAMN,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAd,EAAAA,UAAU,CACLuB,IADL,GAEKM,OAFL,GAGKJ,IAHL,CAGU,MAAMH,QAAQ,CAACP,aAAa,EAAd,CAHxB,EAIKW,KAJL,CAIWC,KAAK,IAAI;AACZ;AACAL,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACH,GAPL;AAQH,CAVM;AAWP,OAAO,MAAMc,UAAU,GAAG,MAAMR,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACAjB,EAAAA,UAAU,CAACuB,IAAX,GAAkBQ,kBAAlB,CAAqCnB,IAAI,IAAI;AACzC,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACfU,MAAAA,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAR;AACH;;AACDU,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACH,GALD;AAMH,CARM","sourcesContent":["import { myFirebase } from \"../firebase/config\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n    return {\r\n        type: LOGIN_REQUEST\r\n    };\r\n};\r\nconst receiveLogin = user => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        user\r\n    };\r\n};\r\nconst loginError = () => {\r\n    return {\r\n        type: LOGIN_FAILURE\r\n    };\r\n};\r\nconst requestLogout = () => {\r\n    return {\r\n        type: LOGOUT_REQUEST\r\n    };\r\n};\r\nconst receiveLogout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS\r\n    };\r\n}; const logoutError = () => {\r\n    return {\r\n        type: LOGOUT_FAILURE\r\n    };\r\n};\r\nconst verifyRequest = () => {\r\n    return {\r\n        type: VERIFY_REQUEST\r\n    };\r\n};\r\nconst verifySuccess = () => {\r\n    return {\r\n        type: VERIFY_SUCCESS\r\n    };\r\n};\r\nexport const loginUser = (email, password) => dispatch => {\r\n    dispatch(requestLogin());\r\n    myFirebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(user => {\r\n            dispatch(receiveLogin(user));\r\n        })\r\n        .catch(error => {\r\n            // Do something with the error if you want! \r\n            dispatch(loginError());\r\n        });\r\n};\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch(requestLogout());\r\n    myFirebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => dispatch(receiveLogout()))\r\n        .catch(error => {\r\n            // Do something with the error if you want! \r\n            dispatch(logoutError());\r\n        });\r\n};\r\nexport const verifyAuth = () => dispatch => {\r\n    dispatch(verifyRequest());\r\n    myFirebase.auth().onAuthStateChanged(user => {\r\n        if (user !== null) {\r\n            dispatch(receiveLogin(user));\r\n        }\r\n        dispatch(verifySuccess());\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}