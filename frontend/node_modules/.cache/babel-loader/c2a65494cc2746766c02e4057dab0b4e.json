{"ast":null,"code":"var _jsxFileName = \"D:\\\\FrameworkUAS\\\\frontend\\\\src\\\\components\\\\Logout.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../actions/loginUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Logout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = () => {\n      const {\n        dispatch\n      } = this.props;\n      dispatch(logoutUser());\n    };\n  }\n\n  render() {\n    const {\n      isLoggingOut,\n      logoutError\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is your app's protected area. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Any routes here will also be protected \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 63\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleLogout,\n        children: \" Logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), isLoggingOut && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Logging Out .... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 34\n      }, this), logoutError && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Error logging out \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoggingOut: state.auth.isLoggingOut,\n    logoutError: state.auth.logoutError\n  };\n}\n\nexport default connect(mapStateToProps)(Logout);","map":{"version":3,"sources":["D:/FrameworkUAS/frontend/src/components/Logout.js"],"names":["React","Component","connect","logoutUser","Logout","handleLogout","dispatch","props","render","isLoggingOut","logoutError","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC3BI,YAD2B,GACZ,MAAM;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACAD,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACH,KAJ0B;AAAA;;AAK3BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAgC,KAAKH,KAA3C;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,oBACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADlD,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKF,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKI,YAAY,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHrB,EAIKC,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAd0B;;AAe7B,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACHH,IAAAA,YAAY,EAAEG,KAAK,CAACC,IAAN,CAAWJ,YADtB;AAEHC,IAAAA,WAAW,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAFrB,GAAP;AAIH;;AAAC,eAAeR,OAAO,CAACS,eAAD,CAAP,CAAyBP,MAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../actions/loginUser\";\r\n\r\nclass Logout extends Component {\r\n    handleLogout = () => {\r\n        const { dispatch } = this.props;\r\n        dispatch(logoutUser());\r\n    };\r\n    render() {\r\n        const { isLoggingOut, logoutError } = this.props;\r\n        return (\r\n            <div>\r\n                <h1> This is your app's protected area. </h1> <p> Any routes here will also be protected </p>\r\n                <button onClick={this.handleLogout}> Logout </button>\r\n                {isLoggingOut && <p> Logging Out .... </p>}\r\n                {logoutError && <p> Error logging out </p>} </div>\r\n        )\r\n    }\r\n} function mapStateToProps(state) {\r\n    return {\r\n        isLoggingOut: state.auth.isLoggingOut,\r\n        logoutError: state.auth.logoutError\r\n    };\r\n} export default connect(mapStateToProps)(Logout);\r\n"]},"metadata":{},"sourceType":"module"}